import { Component, OnInit, PLATFORM_ID, Inject } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import Chart from 'chart.js/auto';
import { isPlatformBrowser } from '@angular/common';

@Component({
  selector: 'app-dashboard',
  templateUrl: './dashboard.component.html',
  styleUrls: ['./dashboard.component.css']
})
export class DashboardComponent implements OnInit {
   isBrowser: boolean;
    // Overview Data
  selectedStudentGPA: any;
  gpaComparison: any ;
  gradeAnalysis: any ;
  totalStudents: any ;
  averageGPA: any;

  // Demographics Section
  genderDistributionData: any = [];
  genderDistributionLabels:any = [];
  ethnicityDistributionData: any = [];
  ethnicityDistributionLabels: any = [];
  correlationData: any = [];
  correlationLabels: any = [];
  gpaDistributionData: any = [];
  gpaDistributionLabels: any = [];

  // Academic Performance Section
  gpaHistogramData: any = [];
  gpaHistogramLabels: any = [];
  gradeHistogramData: any = [];
  gradeHistogramLabels: any = [];
  gpaTrendsData:any = [];
  gpaTrendsLabels:any = [];
  gradeDistributionData:any = [];
  gradeDistributionLabels:any = [];

  // Intervention Insights Section
  interventionTrendsData: any = [];
  interventionTrendsLabels: any = [];

  constructor(private http: HttpClient, @Inject(PLATFORM_ID) private platformId: Object) {
    this.isBrowser = isPlatformBrowser(this.platformId);
  }

  ngOnInit(): void {
    if (this.isBrowser) {
      // Fetch data and render charts
      this.fetchData();
      
    }
    
  }
 

  fetchData(): void {
    this.http.get<any>('http://localhost:5000/compare-with-csv')
      .subscribe((data: any) => {
        // Overview Data
        
         
        if (data && data.overviewData) {
          // Overview Data
          this.selectedStudentGPA = data.overviewData.selectedStudentGPA;
          this.gpaComparison = data.overviewData.gpaComparison;
          this.gradeAnalysis = data.overviewData.gradeAnalysis;
          this.totalStudents = data.overviewData.totalStudents;
          this.averageGPA = data.overviewData.averageGPA;
          
        }
        // Demographics Section
        this.genderDistributionData = data.demographicsData.genderDistribution;
        this.genderDistributionLabels = data.demographicsData.genderLabels;
        this.ethnicityDistributionData = data.demographicsData.ethnicityDistribution;
        this.ethnicityDistributionLabels = data.demographicsData.ethnicityLabels;
        this.correlationData = data.correlationData.correlation;
        this.correlationLabels = data.correlationData.correlation_labels;
        this.gpaDistributionData = data.gpaDistributionData.gpa_distribution;
        this.gpaDistributionLabels = data.gpaDistributionData.gpa_labels;

        // Academic Performance Section
        this.gpaDistributionData = data.gpaDistributionData.gpa_distribution;
        this.gpaDistributionLabels = data.gpaDistributionData.gpa_labels;
        this.gradeDistributionData = data.gradeDistributionData.grade_distribution;
        this.gradeDistributionLabels = data.gradeDistributionData.grade_labels;
        this.gpaTrendsData = data.gpaTrendsData.gpa_trends;
        this.gpaTrendsLabels = data.gpaTrendsData.gpa_trends_labels;

        // Intervention Insights Section
      //  this.interventionTrendsData = data.interventionTrendsData.intervention_trends;
      this.interventionTrendsData = data.intervention_trends;
        //this.interventionTrendsLabels = data.interventionTrendsData.intervention_trends_labels;

      });
      

    // Assigning values fetched from backend to variables
    console.log('Assigning values fetched from backend to variables:');

  }
}